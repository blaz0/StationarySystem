<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>