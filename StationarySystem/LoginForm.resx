<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>